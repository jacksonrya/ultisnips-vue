priority 40

snippet vref "Vue / Create ref" b
const ${1} = ref(${2})
endsnippet

snippet vreactive "Vue / Create reactive" b
const ${1} = reactive(${2})
endsnippet

snippet vcomputed "Vue / Computed" b
const ${1} = computed(() => ${2})
endsnippet

snippet vwatch "Vue / Watch" b
const ${1} = watch(${2}, ($2, $2Prev) => ${3})
endsnippet

snippet vcomposable "Vue / Composable" b
export function use${1}(${2}) {
	${0}

	return {
	}
}
endsnippet

snippet vcontextprovider "Vue / Context provider" b
import { provide, inject } from 'vue'

const key = Symbol()

export function use${1}Provider(${2}) {
	provide(key, ${0})
}

export function use$1Context() {
	const context = inject(key)

	if (!context) {
		throw Error('use$1Context() must be used with use$1Provider()')
	}

	return context
}
endsnippet

snippet vroute "Vue / Route"
{
	path: '/${1}',
	name: '${2}',
	component: ${3:$2},
},
endsnippet
